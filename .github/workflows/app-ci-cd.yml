name: Application_CI_CD_Workflow
run-name: Conversion_App_CI/CD_Workflow

on:
  workflow_dispatch:

  push:
    branches:
      - main

jobs:
  Read_Config:
    runs-on: ubuntu-latest
    outputs:
      APP_VERSION : ${{ steps.set-config-env.outputs.App_Version }}
      APP_ENV : ${{ steps.set-config-env.outputs.App_Env }}
    if: startsWith(github.head_ref, 'feature/*') || startsWith(github.head_ref, 'bugfix/*')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Read Configuration File
        id: read-config
        uses: antifree/json-to-variables@v1.2.0
        with:
          filename: ${{ github.workspace }}/conversion-app-deploy-config.json
          prefix: APP_DEPLOY_CONFIG

      - name: Print and Set Environment Variables
        if: success()
        id: set-config-env
        run: |
          echo "App_Version: ${{ env.APP_DEPLOY_CONFIG_APP_VERSION }}"
          echo "::set-output name=App_Version::${{ env.APP_DEPLOY_CONFIG_APP_VERSION }}"

          echo "App_Env: ${{ env.APP_DEPLOY_CONFIG_APP_ENV }}"
          echo "::set-output name=App_Env::${{ env.APP_DEPLOY_CONFIG_APP_ENV }}"

  Conversion_App_CI:
    name: Conversion_App_CI_${{ needs.Read_Config.outputs.APP_VERSION }}
    needs: [ Read_Config ]
    if: startsWith(github.head_ref, 'feature/') || startsWith(github.head_ref, 'bugfix/')
    uses: ./.github/workflows/app-ci.yml
    with:
      App_Version: ${{ needs.Read_Config.outputs.APP_VERSION }}
    secrets: inherit

  Conversion_App_CD:
    name: Conversion_App_CD_${{ needs.Read_Config.outputs.APP_VERSION }}-${{ needs.Read_Config.outputs.APP_ENV }}
    if: startsWith(github.head_ref, 'feature/') || startsWith(github.head_ref, 'bugfix/')
    needs: [ Read_Config, Conversion_App_CI ]
    uses: ./.github/workflows/app-cd.yml
    with:
      App_Version: ${{ needs.Read_Config.outputs.APP_VERSION }}
      Environment: ${{ needs.Read_Config.outputs.APP_ENV }}
    secrets: inherit